set nocompatible              " be iMproved, required
filetype off                  " required

filetype plugin indent on
filetype plugin on
filetype indent on

scriptencoding utf-8
set hidden
set encoding=utf-8    
set langmenu=en_US.UTF-8
language message en_US.UTF-8

set nu                       "set line number
set ru                       "ruler
syntax on                    "syntax highlighting 
set paste                    "set paste
set cul                      "cursorline highlighting
set scrolloff=5              "the minimal screen line above/below the cursor
set laststatus=2             "always show the status bar
set wildmenu

set autoindent               "newline in same place
set smarttab
set expandtab                "help tabstop & help expandtab
set tabstop=2                "tab=4space
set shiftwidth=2             ">>,<< for 4space
set bs=2                     "open the backspace

"set tags=./tags,tags;
set tags=./tags;/
"set tags+=~/tags             "read ctags from ~/tags

nnoremap <C-n> :bnext<CR>
nnoremap <C-p> :bprevious<CR>

" Allow resizing inside xterm
set mouse+=a
if &term =~ '^screen'
    " tmux knows the extended mouse mode
    set ttymouse=xterm2
endif

" 256 color for terminal
set t_Co=256
let g:solarized_termcolors=256
set background=dark
colorscheme peachpuff
set term=screen-256color

" Vundlel
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

" let Vundle manage Vundle, required

Plugin 'gmarik/Vundle.vim'
Plugin 'dracula/vim'
Plugin 'godlygeek/tabular'
Plugin 'scrooloose/syntastic'
Plugin 'Shougo/unite.vim'
Plugin 'rking/ag.vim'
Plugin 'majutsushi/tagbar'
Plugin 'sgur/unite-everything'

call vundle#end()            " required

"" Remap for Tagbar!
:map <Leader>m :TagbarToggle<CR>

"" Unite
let g:unite_source_history_yank_enable = 1
try
    let g:unite_source_rec_async_command='ag --nocolor --nogroup -g ""'
    call unite#filters#matcher_default#use(['matcher_fuzzy'])
catch
endtry
" search a file in the filetree
nnoremap <space><space>  :<C-u>Unite -start-insert file_rec/async<cr>
" " reset not it is <C-l> normally
:nnoremap <space>r <Plug>(unite_restart)

nmap <Leader>z :Ag <c-r>=expand("<cword>")<cr><cr>
nnoremap <space>/ :Ag

